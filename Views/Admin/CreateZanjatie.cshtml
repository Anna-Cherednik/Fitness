@model Fitness.Models.RaspisanieViewModel

@{
    ViewBag.Title = "Добавить занятие";
}

<h2>Добавить занятие</h2>

@if (ViewBag.ErrorMessage != null)
{
    <p>@ViewBag.ErrorMessage</p>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usluga, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Usluga, ViewBag.Uslugas as SelectList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Usluga, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sotrudnik, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Sotrudnik, ViewBag.Sotrudniks as SelectList, "" ,new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sotrudnik, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pomeshenie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Pomeshenie, ViewBag.Pomeshenies as SelectList, "", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pomeshenie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к расписанию", "DetailsRaspisanie")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
